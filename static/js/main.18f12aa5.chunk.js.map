{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","showInfo","deleteInfo","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18f12aa5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,   //Payload me compete updated contact fields Hai\r\n                contacts: state.contacts\r\n                    .map(contact =>\r\n                        contact.id === action.payload.id ?\r\n                            contact = action.payload : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    // #1. Getting Contacts From Context API\r\n    async componentDidMount() {\r\n        const res = await axios.get('http://jsonplaceholder.typicode.com/users');\r\n        // .then(res => this.setState({ contacts: res.data }))\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n/* Context Api : Provider & Consumer : Act as a store\r\n    Context.Provider : It's a class, to provide that class to app.js\r\n    Context.Consumer : It's a const, to consume that class in contacts\r\n    Complete Reference of CONTEXT API : Folder-4/Video-5,6\r\n*/\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n\r\n    state = { showContactInfo: false };\r\n\r\n    showInfo = () => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo });\r\n    }\r\n\r\n    // #2. Delete Request To Context API\r\n\r\n    deleteInfo = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n            // .then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        } catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        }\r\n    }\r\n\r\n    render(props) {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} {' '}\r\n                                <i onClick={this.showInfo} className=\"fas fa-sort-down\"\r\n                                    style={{ cursor: 'pointer' }}></i>\r\n                                <i onClick={this.deleteInfo.bind(this, id, dispatch)} className=\"fas fa-times\"\r\n                                    style={{ cursor: 'pointer', float: 'right', color: 'red' }}></i>\r\n                                <Link to={`contact/edit/${id}`} >\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                        style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem' }}\r\n                                    ></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone : {phone}</li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-primary\">Contact</span> List</h1>\r\n                            {contacts.map((contact) => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n// import uuid from 'uuid';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check For Errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            //  id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        // #3. Add Contact Request To Context API\r\n        const res = await axios.post('http://jsonplaceholder.typicode.com/users', newContact);\r\n        // .then(res => dispatch({ type: 'ADD_CONTACT', payload: res.data }));\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        // Clear State :\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        //Redirect to /home after submit -> clear fields -> /home\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n\r\n/*\r\n\r\n                                <TextInputGroup\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                />\r\n\r\n                                isEqualTo :\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            className=\"input form-control form-control-lg\"\r\n                                            placeholder=\"Add Name...\"\r\n                                            value={name}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n\r\n\r\n\r\n*/\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n// import uuid from 'uuid';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check For Errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n\r\n        // Edited Contact Update\r\n        const updContact = {    //Coming from this.state\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });    //Payload me compete updated contact fields\r\n\r\n        // Clear State :\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        //Redirect to /home after submit -> clear fields -> /home\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const branding = props.branding;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App!\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple App To Manage Contact</p>\r\n            <p className=\"text-seconday\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// {props.match.params.id} : /about:id \r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-primary\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        id: '',\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                id: data.id,\r\n                title: data.title\r\n            }))\r\n    }\r\n\r\n    render() {\r\n        const { id, title } = this.state;\r\n        return (\r\n            <div>\r\n                <h1><span className=\"text-primary\">Test</span> Component</h1>\r\n                <h2>{id}</h2>\r\n                <p>{title}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from './context';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}